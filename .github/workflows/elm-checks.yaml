name: Tests
on:
  pull_request:
  push:
    branches: [master]

jobs:
  elm-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm make
        run: elm make --output /dev/null

  elm-test:
    needs: [elm-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm-test
        run: elm-test

  elm-format:
    needs: [elm-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm-format
        uses: sparksp/elm-format-action@v1

  elm-review:
    needs: [elm-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm-review
        run: elm-review

  elm-analyse:
    needs: [elm-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run elm-analyse
        uses: harehare/elm-analyse-action@v1

  elm-docs:
    needs: [elm-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Build elm docs
        run: elm make --docs docs.json

  elm-publish:
    needs: [elm-test, elm-format, elm-review, elm-analyse, elm-docs]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      # - name: Publish package
      #   uses: dillonkearns/elm-publish-action@1.0.1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
